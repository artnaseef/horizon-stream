<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
    xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0"

    xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0 
		https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd

		http://camel.apache.org/schema/blueprint
		http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
">

    <ext:property-placeholder placeholder-prefix="$[" placeholder-suffix="]"/>

    <cm:property-placeholder id="monitorProperties"
                             persistent-id="org.opennms.core.monitor"
                             update-strategy="reload">
        <cm:default-properties>
            <cm:property name="monitor.task-set.kafka-topic" value="task-set.results"/>
            <cm:property name="kafkaBrokers" value="$[env:KAFKA_BROKER_HOST]:$[env:KAFKA_BROKER_PORT]"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="echoClient" interface="org.opennms.horizon.minion.echo.ipc.client.LocationAwareEchoClient"/>
    <reference id="metricsAdapter" interface="org.opennms.horizon.metrics.api.OnmsMetricsAdapter"/>
    <reference id="eventSubscriptionService" interface="org.opennms.horizon.events.api.EventSubscriptionService" availability="mandatory"/>
    <reference id="sessionUtils" interface="org.opennms.horizon.db.dao.api.SessionUtils" />
    <reference id="nodeDao" interface="org.opennms.horizon.db.dao.api.NodeDao" />
    <reference id="ipInterfaceDao" interface="org.opennms.horizon.db.dao.api.IpInterfaceDao" />
    <reference id="minionDao" interface="org.opennms.horizon.db.dao.api.MinionDao"/>
    <reference id="taskSetManager" interface="org.opennms.horizon.taskset.manager.TaskSetManager"/>
    <reference id="taskSetGrpcClient" interface="org.opennms.taskset.service.api.TaskSetPublisher" filter="(type=grpc)"/>

    <reference id="monitoringLocationDao" interface="org.opennms.horizon.db.dao.api.MonitoringLocationDao" />

    <bean id="minionRpcMonitorManager" class="org.opennms.horizon.core.monitor.MinionRpcMonitorManager"
        init-method="init" destroy-method="shutdown">
        <argument ref="echoClient"/>
        <argument ref="metricsAdapter"/>
        <argument ref="sessionUtils"/>
        <argument ref="minionDao"/>
        <argument ref="eventSubscriptionService"/>
    </bean>

    <bean id="deviceMonitorManager" class="org.opennms.horizon.core.monitor.DeviceMonitorManager"
          init-method="init" destroy-method="shutdown">
        <argument ref="eventSubscriptionService"/>
        <argument ref="nodeDao"/>
        <argument ref="ipInterfaceDao"/>
        <argument ref="sessionUtils"/>
        <argument ref="metricsAdapter"/>
        <argument ref="taskSetGrpcClient"/>
        <argument ref="monitoringLocationDao"/>
        <argument ref="taskSetManager"/>
    </bean>

    <!--       -->
    <!-- CAMEL -->
    <!--       -->

    <bean id="deviceMonitorResultProcessor" class="org.opennms.horizon.core.monitor.DeviceMonitorResultProcessor">
        <argument ref="metricsAdapter"/>
    </bean>

    <camelContext autoStartup="true" id="monitorCamelContext" xmlns="http://camel.apache.org/schema/blueprint"
                  allowUseOriginalMessage="false">
        <propertyPlaceholder id="properties" location="blueprint:monitorProperties"/>

        <route id="consumeKafkaTaskSetResults">
            <from uri="kafka:{{monitor.task-set.kafka-topic}}?brokers={{kafkaBrokers}}&amp;valueDeserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer"/>
            <unmarshal>
                <protobuf instanceClass="org.opennms.taskset.contract.TaskSetResults"/>
            </unmarshal>
            <process ref="deviceMonitorResultProcessor"/>
        </route>
    </camelContext>

</blueprint>
