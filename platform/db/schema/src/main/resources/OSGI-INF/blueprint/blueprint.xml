<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ This file is part of OpenNMS(R).
  ~
  ~ Copyright (C) 2012-2022 The OpenNMS Group, Inc.
  ~ OpenNMS(R) is Copyright (C) 1999-2022 The OpenNMS Group, Inc.
  ~
  ~ OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.
  ~
  ~ OpenNMS(R) is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as published
  ~ by the Free Software Foundation, either version 3 of the License,
  ~ or (at your option) any later version.
  ~
  ~ OpenNMS(R) is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with OpenNMS(R).  If not, see:
  ~      http://www.gnu.org/licenses/
  ~
  ~ For more information contact:
  ~     OpenNMS(R) Licensing <license@opennms.org>
  ~     http://www.opennms.org/
  ~     http://www.opennms.com/
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0"
           xsi:schemaLocation="
                http://www.osgi.org/xmlns/blueprint/v1.0.0
                https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

                http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0
                http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd

                http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0
                https://aries.apache.org/documentation/_attachments/schemas/blueprint-ext/blueprint-ext-1.5.xsd
            ">

    <ext:property-placeholder placeholder-prefix="$[" placeholder-suffix="]"/>

    <cm:property-placeholder id="datasourceProperties" persistent-id="org.opennms.netmgt.distributed.datasource" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="connection.pool.idleTimeout" value="600" />
            <cm:property name="connection.pool.loginTimeout" value="3000" />
            <cm:property name="connection.pool.minPool" value="50" />
            <cm:property name="connection.pool.maxPool" value="50" />
            <cm:property name="connection.pool.maxSize" value="50" />

            <cm:property name="datasource.adminUrl" value="jdbc:postgresql://$[env:PGSQL_SERVICE_NAME]:5432/template1" />
            <cm:property name="datasource.adminDatabaseName" value="template1" />
            <cm:property name="datasource.adminUsername" value="$[env:PGSQL_ADMIN_USERNAME]" />
            <cm:property name="datasource.adminPassword" value="$[env:PGSQL_ADMIN_PASSWORD]" />

            <cm:property name="datasource.url" value="jdbc:postgresql://$[env:PGSQL_SERVICE_NAME]:5432/opennms" />
            <cm:property name="datasource.username" value="$[env:PGSQL_USERNAME]" />
            <cm:property name="datasource.password" value="$[env:PGSQL_PASSWORD]" />
            <cm:property name="datasource.databaseName" value="opennms" />
            <cm:property name="datasource.initialize" value="true" />

            <cm:property name="datasource.driverClass" value="org.postgresql.Driver" />
        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="opennmsLiquibaseChangeLogProvider" interface="org.opennms.core.schema.liquibase.OpennmsLiquibaseChangeLogProvider"/>
    <reference id="dataSourceFactory" interface="org.osgi.service.jdbc.DataSourceFactory" />
    <reference id="pooledDataSourceFactory" interface="org.ops4j.pax.jdbc.pool.common.PooledDataSourceFactory" />

    <bean id="liquibaseResourceClassLoader" factory-ref="opennmsLiquibaseChangeLogProvider" factory-method="getResourceClassLoader"/>


    <!--                                                                      -->
    <!-- ADMIN datasource - for creating the opennms database and other admin -->
    <!--                                                                      -->

    <!-- No connection pool needed for the Admin datasource - it's use is very limited -->
    <bean id="adminDatasource" factory-ref="dataSourceFactory" factory-method="createDataSource">
        <argument>
            <props>
                <prop key="databaseName" value="${datasource.adminDatabaseName}" />

                <prop key="user" value="${datasource.adminUsername}" />
                <prop key="password" value="${datasource.adminPassword}" />
                <prop key="url" value="${datasource.adminUrl}" />

                <!--<prop key="osgi.jdbc.driver.class" value="${datasource.driverClass}"/>-->
            </props>
        </argument>
    </bean>

    <!-- RAW datasource - accessible before DB setup + Liquibase executes -->
    <bean id="earlyDatasource" factory-ref="dataSourceFactory" factory-method="createDataSource">
        <argument>
            <props>
                <prop key="databaseName" value="${datasource.databaseName}" />

                <prop key="user" value="${datasource.username}" />
                <prop key="password" value="${datasource.password}" />
                <prop key="url" value="${datasource.url}" />
            </props>
        </argument>
    </bean>

    <!--                              -->
    <!-- DATABASE SETUP AND MIGRATION -->
    <!--                              -->
    <bean id="openNmsDatabasePreHook" class="org.opennms.core.schema.OpenNMSDatabasePrehook">
        <property name="enabled" value="${datasource.initialize}"/>
        <property name="adminDatasource" ref="adminDatasource"/>

        <property name="opennmsAdminDatasourceProperties">
            <props>
                <prop key="databaseName" value="${datasource.adminDatabaseName}"/>

                <prop key="user" value="${datasource.adminUsername}"/>
                <prop key="password" value="${datasource.adminPassword}"/>
                <prop key="url" value="${datasource.adminUrl}"/>
            </props>
        </property>

        <property name="opennmsDatasourceProperties">
            <props>
                <prop key="databaseName" value="${datasource.databaseName}"/>

                <prop key="user" value="${datasource.username}"/>
                <prop key="password" value="${datasource.password}"/>
                <prop key="url" value="${datasource.url}"/>
            </props>
        </property>

        <property name="liquibaseResourceClassLoader" ref="liquibaseResourceClassLoader"/>
    </bean>

    <bean id="preparedDataSourceProvider" class="org.opennms.core.schema.impl.MigratorPreparedDataSourceProviderImpl">
        <property name="earlyDatasource" ref="earlyDatasource"/>
        <property name="prehook" ref="openNmsDatabasePreHook"/>
        <property name="pooledDataSourceFactory" ref="pooledDataSourceFactory" />
        <property name="dataSourceFactory" ref="dataSourceFactory" />
        <property name="pooledDataSourceProperties">
            <props>
                <prop key="databaseName" value="${datasource.databaseName}"/>

                <prop key="user" value="${datasource.username}"/>
                <prop key="password" value="${datasource.password}"/>
                <prop key="url" value="${datasource.url}"/>

                <prop key="pool.idleTimeout" value="${connection.pool.idleTimeout}"/>
                <prop key="pool.connectionTimeout" value="${connection.pool.loginTimeout}"/>
                <prop key="pool.minimumIdle" value="${connection.pool.minPool}"/>
                <prop key="pool.maximumPoolSize" value="${connection.pool.maxPool}"/>
            </props>
        </property>
    </bean>

    <bean id="preparedDataSource" factory-ref="preparedDataSourceProvider" factory-method="retrieve"/>

    <!--                   -->
    <!-- EXPORTED SERVICES -->
    <!--                   -->
    <service ref="preparedDataSource" interface="javax.sql.DataSource">
        <service-properties>
            <entry key="osgi.jndi.service.name" value="opennms"/>
        </service-properties>
    </service>

</blueprint>
